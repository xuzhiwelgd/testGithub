<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black" />
  <meta name="full-screen" content="yes">
  <meta name="x5-fullscreen" content="true">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <meta name="format-detection" content="telephone=no,email=no" />
  <title>Smart bulb</title>
  <link rel="stylesheet" type="text/css" href="css/style.css">
  <link rel="stylesheet" type="text/css" href="css/bulb2.css">
  <link rel="stylesheet" type="text/css" href="css/rangeslider.css">
  <script>
    !function(){var fontSize=parseFloat(getComputedStyle(document.getElementsByTagName('html')[0], null)['font-size']);function a(){document.documentElement.style.fontSize=document.documentElement.clientWidth/750*10/fontSize*1000+"%"}var b=null;window.addEventListener("resize",function(){clearTimeout(b);b=setTimeout(a,300)},!1);a()}(window);
  </script>
</head>
<body style="background:#f2f2f2">
  <header>
    <img src="images/top_back_ic.png" class="headerL" id="backPrev"/>
    <p class="headerTitle">Smart blub</p>
    <img src="images/fav_ic.png" class="headerRLImg" id="savefavorite" data-sxid="0x0002000a"/>
    <img src="images/top_more_ic.png" class="headerR"  id="set" />
  </header>
  <!-- <div class="ctrTimer">
    <p>10 minutes later turn on</p>
    <p>Saturday,12:48 turn off</p>
  </div> -->
  <div class="disk">
    <!-- <img class="touch_btn" src="images/touch_btn.png">
    <img class="colorbg" src="images/color.png"> -->
    <img class="on_btn" src="images/on_btn.png">
    <canvas id="canvas" data-sxid="0x00020005"></canvas>
    <div class="disableRemove"></div>
  </div>
  <div class="brightness">
    <p>Brightness <span id="brightnessVal">100</span></p>
    <input type="range" id="brightness" min="1" max="100" value="100" step='1' data-rangeslider/>
  </div>
  <div class="ctrl_list">
    <ul>
      <li id="bright"><img src="images/bright_ic1.png"><p>Bright</p></li>
      <li id="sleep"><img src="images/sleep_ic1.png"><p>Sleep</p></li>
      <li id="read"><img src="images/read_ic1.png"><p>Read</p></li>
      <li id="warm"><img src="images/warm_ic1.png"><p>Warm</p></li>
      <li id="favorite"><img src="images/favorite_ic1.png"><p>Favorite</p></li>
    </ul>
  </div>
  <p class="dialog" id="dialog"></p>
  <!-- <div class="FirmwareUpdating ">
    <h3 class="pTitle">Firmware updating</h3>
    <div class="loader-container">
      <div class="meter">0</div>
      <span class="runner"></span>
      <p class="des">Downloading</p>
    </div>
    <p class="backFU">BACK</p>
  </div>
  <div class="offlineNotice none">
    <p class="offlineText">Device is offline, please check current connection status.</p>
    <p class="backON">BACK</p>
  </div>
  <div class="bg "></div> -->

<script src="js/jquery-3.2.1.min.js"></script>
<script src="js/fastclick.min.js"></script>
<script src="js/lenovoSmartJsSdk.js"></script>
<script src="js/bulb.js"></script>
<script src="js/rangeslider.min.js"></script>
<script type="text/javascript">
var Gline;
var onoff;
var gadgetId;
var Gflz;
var onoff;
var Gbrightness; //亮度
var Gctp;  //色温
var Gtimer;  //延时
var Gschedule;  //定时
var Gmode;  //模式
var Gfavorite; //收藏
var Gcontaled = 0;

var lastOptTime = 0;

var timeoutId = null;
var isFindGadgetById = false;

//ios调用[防止，ios通过链接获取不到gadgetId时，使用]
function refreshView(data){
  var data = eval('('+data+')');
  gadgetId = data.gadget_id;
  Gline = data.status;
  if(gadgetId){
      localStorage.setItem("gadgetId",gadgetId);
  }
  data = data.attributes;
  updateActionsState(data);
}
//[step1:获取gadgetId并储存]
gadgetId = LenSmJs.gadgetId_h5();
if(!gadgetId){
  gadgetId = localStorage.getItem("gadgetId");
}
//[step2:Android 需要传递一次gadgetId，以便其储存起来使用]
LenSmJs.saveGadgetId_h5(gadgetId);
//[step3:Android 注册监听:只有实例化的监听才能收到变化通知]
LenSmJs.getAddListener_h5();

//[step4:进页面去请求、获取设备离线状态]
LenSmJs.GetGadgetState_h5(gadgetId);

if(gadgetId){
  //设置新的gadgetId覆盖旧的
  localStorage.setItem("gadgetId",gadgetId);
  //初始化页面 主动请求属性数据
  LenSmJs.FindGadgetById_h5(gadgetId);
}

  var a = '300'
  var d=a/3,r=0.05*a,circleX=0.5*a-0.707*d,circleY=0.5*a-0.707*d,progress=0,d_kg=0.4*a;
  
  function change_progress(input_progress){
    var rotation_degree=(input_progress/1000)*Math.PI*2;
    var position_degree=(5/4)*Math.PI-rotation_degree;
    circleX=0.5*a+d*Math.sin(position_degree);
    circleY=0.5*a+d*Math.cos(position_degree);
    progress=input_progress;
  };
  
  document.getElementById("canvas").width =a;  
  document.getElementById("canvas").height = a;  
  ctx=document.getElementById("canvas").getContext("2d")

  var img1 = new Image();  
  var img2 = new Image();
  var img3 = new Image();
  img1.src='images/color.png';
  img2.src='images/touch_btn.png';
  img3.src='images/on_btn.png';
  
  canvas.addEventListener("touchmove",function(e){
    e.preventDefault();
    var touch=e.touches[0];
    // var GactionId = this.getAttrbute('data-sxid');
    // console.log(GactionId);
    var canvasT = canvas.getBoundingClientRect().top;
    var canvasL = canvas.getBoundingClientRect().left;
    var tX=parseFloat(touch.pageX)-canvasL,
        tY=parseFloat(touch.pageY)-canvasT;

    if((Math.pow((tX-0.5*a),2) +Math.pow((tY-0.5*a),2))>0.04*a*a){ 
      if((tY<0.5*a&&(tX<0.5*a))||(tY>0.5*a&&(tX<0.5*a))){
        circleX=0.5*a-d*Math.cos(Math.atan((tY-0.5*a)/(tX-0.5*a)));
        circleY=0.5*a-d*Math.sin(Math.atan((tY-0.5*a)/(tX-0.5*a)));
      }else{
        circleX=0.5*a+d*Math.cos(Math.atan((tY-0.5*a)/(tX-0.5*a)));
        circleY=0.5*a+d*Math.sin(Math.atan((tY-0.5*a)/(tX-0.5*a)));
      }
      
      if((tY>0.5*a&&(tX>0.5*a))||(tY<0.5*a&&(tX>0.5*a))){
        progress=(1375+parseInt(250*(Math.atan((tY-0.5*a)/(tX-0.5*a))/(0.5*Math.PI))))%1000-1;
        var now = new Date();
        if(now.getTime() - lastOptTime > 500){
          lastOptTime = now.getTime();
          LenSmJs.ExcuteAction_h5(gadgetId,'0x00020002',progress);
        }else{
          clearTimeout(timeoutId);
          timeoutId = setTimeout(function(){
            lastOptTime = new Date().getTime();
          },500);
        }
        $('#bright img').prop('src','images/bright_ic1.png')
        $('#sleep img').prop('src','images/sleep_ic1.png')
        $('#read img').prop('src','images/read_ic1.png')
        $('#warm img').prop('src','images/warm_ic1.png')
        $('#favorite img').prop('src','images/favorite_ic1.png')
      }else{
        progress=(1875+parseInt(250*(Math.atan((tY-0.5*a)/(tX-0.5*a))/(0.5*Math.PI))))%1000+1;
        var now = new Date();
        if(now.getTime() - lastOptTime >  500){
          lastOptTime = now.getTime();
          LenSmJs.ExcuteAction_h5(gadgetId,'0x00020002',progress);
        }else{
          clearTimeout(timeoutId);
          timeoutId = setTimeout(function(){
            lastOptTime = new Date().getTime();
          },500);
        }
        $('#bright img').prop('src','images/bright_ic1.png')
        $('#sleep img').prop('src','images/sleep_ic1.png')
        $('#read img').prop('src','images/read_ic1.png')
        $('#warm img').prop('src','images/warm_ic1.png')
        $('#favorite img').prop('src','images/favorite_ic1.png')
      }
    }
  },false)
  
  function huaquan(x,y,r){
    ctx.drawImage(img2,x-r,y-r,2*r,2*r);
  };
  
!function(){
    ctx.clearRect(0, 0, 0.7*a, a);
    
    ctx.drawImage(img1,0,0,a,a);
    ctx.drawImage(img3,0.5*a-0.5*d_kg,0.5*a-0.5*d_kg,d_kg,d_kg);
    huaquan(circleX,circleY,r);
    
    setTimeout(arguments.callee,13);//刷新间隔，控制帧数
}();

$('#brightness').rangeslider({
    polyfill: false,
    // Callback function
    onSlide: function(position, value) {
      $('#brightnessVal').text(value)
      var now = new Date();
      if(now.getTime() - lastOptTime > 500){
        console.log("set brightness to "+value);
        lastOptTime = now.getTime();
        LenSmJs.ExcuteAction_h5(gadgetId,"0x00020005" ,value);
      }else{
        console.log("set brightness was replaced");
        clearTimeout(timeoutId);
        timeoutId = setTimeout(function(){
            lastOptTime = new Date().getTime();
            console.log("set brightness to "+value);
            LenSmJs.ExcuteAction_h5(gadgetId,"0x00020005" ,value);
        },500);
      }
    }
});

$(document).on('click', '#set', function(){
  location.href="set.html"
})

$(document).on('click', '#savefavorite', function(){
  if(Gline == 1){
    $('.offlineNotice,.bg').hide();
    if(onoff == 1){
      GactionId = $(this).attr("data-sxid");
      Gfavorite = Gctp+","+Gbrightness;  //"CT,L"
      LenSmJs.ExcuteAction_h5(gadgetId,GactionId ,Gfavorite);
    }else{
      //设备已关闭提示
      bulb.dialogShow('设备已关闭')
    }
  }else{
    //设备已离线提示
    // $('.offlineNotice,.bg').show();
  }
})

$(document).on('click', '#bright', function(){
  if(Gline == 1){
    $('.offlineNotice,.bg').hide();
    if(onoff == 1){
      $('#bright img').prop('src','images/bright_ic2.png')
      $('#sleep img').prop('src','images/sleep_ic1.png')
      $('#read img').prop('src','images/read_ic1.png')
      $('#warm img').prop('src','images/warm_ic1.png')
      LenSmJs.ExcuteAction_h5(gadgetId,"0x00020009" ,"1");
    }else{
      return
    }
  }else{
    // $('.offlineNotice,.bg').show();
  }
})

$(document).on('click', '#sleep', function(){
  if(Gline == 1){
    $('.offlineNotice,.bg').hide();
    if(onoff == 1){
      $('#bright img').prop('src','images/bright_ic1.png')
      $('#sleep img').prop('src','images/sleep_ic2.png')
      $('#read img').prop('src','images/read_ic1.png')
      $('#warm img').prop('src','images/warm_ic1.png')
      LenSmJs.ExcuteAction_h5(gadgetId,"0x00020009" ,"2");
    }else{
      return
    }
  }else{
    // $('.offlineNotice,.bg').show();
  }
})

$(document).on('click', '#read', function(){
  if(Gline == 1){
    $('.offlineNotice,.bg').hide();
    if(onoff == 1){
      $('#bright img').prop('src','images/bright_ic1.png')
      $('#sleep img').prop('src','images/sleep_ic1.png')
      $('#read img').prop('src','images/read_ic2.png')
      $('#warm img').prop('src','images/warm_ic1.png')
      LenSmJs.ExcuteAction_h5(gadgetId,"0x00020009" ,"3");
    }else{
      return
    }
  }else{
    // $('.offlineNotice,.bg').show();
  }
})

$(document).on('click', '#warm', function(){
  if(Gline == 1){
    $('.offlineNotice,.bg').hide();
    if(onoff == 1){
      $('#bright img').prop('src','images/bright_ic1.png')
      $('#sleep img').prop('src','images/sleep_ic1.png')
      $('#read img').prop('src','images/read_ic1.png')
      $('#warm img').prop('src','images/warm_ic2.png')
      LenSmJs.ExcuteAction_h5(gadgetId,"0x00020009" ,"4");
    }else{
      return
    }
  }else{
    // $('.offlineNotice,.bg').show();
  }
})

$(document).on('click', '#favorite', function(){
  if(Gline == 1){
    $('.offlineNotice,.bg').hide();
    if(Gfavorite == "" || Gfavorite == "-1,-1" || onoff == 0){
      return;
    }else{
      $('#bright img').prop('src','images/bright_ic1.png')
      $('#sleep img').prop('src','images/sleep_ic1.png')
      $('#read img').prop('src','images/read_ic1.png')
      $('#warm img').prop('src','images/warm_ic1.png')
      $('#favorite img').prop('src','images/favorite_ic2.png')
    }
  }else{
    // $('.offlineNotice,.bg').show();
  }
})


$(document).on('click', '.backON,.backFU', function(){
  LenSmJs.initFinish_h5();
})

$(document).on('click', '.on_btn', function(e){
  e.preventDefault();
  if(Gline == 1){
    $('.offlineNotice,.bg').hide();
    if(onoff == 1){
      //【接口3】发送开关关闭操作
      LenSmJs.ExcuteAction_h5(gadgetId,"0x00020000" ,"0");
      offState();
      //发出命令之后，不管服务器响应不响应，就要改变状态
      //改变开关状态
      onoff = 0;
    }else{
      //【接口3】发送开关打开操作
      LenSmJs.ExcuteAction_h5(gadgetId,"0x00020000" ,"1");
      onState();
      //改变开关状态
      onoff = 1;
    }
  }else{
    // $('.offlineNotice,.bg').show();
  }
})

function callbackdata(id,name,data){
  //属性操作回调与属性改变监听回调name:BackExcuteList
  //主动请求属性数据回调name：FindGadgetById
  if( name == "BackExcuteList" || name == "FindGadgetById"){
    isFindGadgetById = (name == "FindGadgetById");
    if(typeof(data) == "string"){
      data = eval('('+data+')');
    }
    updateActionsState(data);
  }
  //判断设备是否离线：GetGadgetState   data.state 0 离线； 1 在线
  if(name == "GetGadgetState"){
    var data =eval('('+data+')');
    if(data.state == true){
      Gline = 1;
    }else{
      Gline = 0;
    }
    if(Gline == 0){
      // $('.offlineNotice,.bg').show();
    }
  }
}



// 初始化
function initialise(){
  console.log(' initialise start');
  //设置开关
  if(onoff == 1){
    onState()
  }else{
    offState()
  }

  switch(Gmode)
  {
    case 0:
      $('#bright img').prop('src','images/bright_ic1.png')
      $('#sleep img').prop('src','images/sleep_ic1.png')
      $('#read img').prop('src','images/read_ic1.png')
      $('#warm img').prop('src','images/warm_ic1.png')
    case 1:
      $('#bright img').attr('src','images/bright_ic2.png')
      break;
    case 2:
      $('#sleep img').attr('src','images/sleep_ic2.png')
      break;
    case 3:
      $('#read img').attr('src','images/read_ic2.png')
      break;
    case 4:
      $('#warm img').attr('src','images/warm_ic2.png')
      break;
    case 5:
      $('#favorite img').attr('src','images/favorite_ic2.png')
      break;
  }

  //亮度
  if( Gbrightness <=100 && Gbrightness >=0 ){
    if(onoff == 0){
      offState()
    }else{
      console.log("Gbrightness="+Gbrightness);
      if(isFindGadgetById){
        $('#brightness').val(Gbrightness).change()
      }
    }
  }
  //色温
  if( Gctp <=1000 && Gctp >=0 ){
    if(onoff == 0){
      offState()
    }else{
      if(isFindGadgetById){
        change_progress(Gctp)
      }
    }
  }

  if( onoff == 1 && Gfavorite != "" && Gfavorite != "-1,-1"){
    $('#favorite img').attr('src','images/favorite_ic1.png')
  }else{
    $('#favorite img').attr('src','images/favorite_ic3.png')
  }
  // Loader.init({
  //   time: 3000
  // });
  console.log(' initialise end');
}

function onState(){
  // $('.colorbg').prop('src','images/color.png')
  $('.disableRemove').hide()
  img1.src="images/color.png"
  $('.rangeslider').removeClass('backBarOff').removeClass('rangeslider--disabled')
  $('#bright img').prop('src','images/bright_ic2.png')
  $('#sleep img').prop('src','images/sleep_ic1.png')
  $('#read img').prop('src','images/read_ic1.png')
  $('#warm img').prop('src','images/warm_ic1.png')
  $('#favorite img').prop('src','images/favorite_ic1.png')
}

function offState(){
  // $('.colorbg').prop('src','images/color_off.png')
  $('.disableRemove').show()
  img1.src="images/color_off.png"
  $('.rangeslider').addClass('backBarOff').addClass('rangeslider--disabled')
  $('#bright img').prop('src','images/bright_ic3.png')
  $('#sleep img').prop('src','images/sleep_ic3.png')
  $('#read img').prop('src','images/read_ic3.png')
  $('#warm img').prop('src','images/warm_ic3.png')
  $('#favorite img').prop('src','images/favorite_ic3.png')
}
//刷新属性状态
function updateActionsState(data){
  if(data){
    $.each(data,function(i,v){
      var bsxid;
      if(v.attribute_id){
        bsxid = v.attribute_id;
      }
      var val = 0;
      if(v.value){
        val = v.value[0];
      }
      console.log("updateActionsState("+bsxid+","+val+")");
      if( bsxid == "0x00020000"){
        //开关返回
        onoff = val;
        //只在主动控制时，弹出，设备已关闭提示
        if(onoff == 0  && Gcontaled == 1){
          Gcontaled = 0;
        }
      }
      if( bsxid == "0x00020007"){ //定时
        Gschedule = val;
      }
      if( bsxid == "0x00020006"){ //延时
        Gtimer = val;
      }

      if( bsxid == "0x00020005"){
        //亮度值
        Gbrightness = val;
        if(Gbrightness>100){
          Gbrightness = 100;
        }else if(Gbrightness<1){
          Gbrightness = 1;
        }
      }
      if( bsxid == "0x00020002"){
        //色温值
        Gctp = val;
        callbackState = true;
        if(Gctp>1000){
          Gctp = 1000;
        }else if(Gctp<0){
          Gctp = 0;
        }
      } 
      if( bsxid == "0x00020009"){
        Gmode = val;
      }
      if( bsxid == "0x0002000a"){
        Gfavorite = val;
      }
      if( bsxid == "0x10000001"){
        //储存当前版本号
        var GcurrVersion = val;
        localStorage.setItem("GcurrVersion",GcurrVersion);
      }
      if(  bsxid == "0x10000004"){
        //SN号（序列号）
        //console.log("0产品序列号："+val);
        var snNum = val;
        localStorage.setItem("snNum",snNum);
      }
      console.log("updateActionsState("+bsxid+","+val+") end");
    });
    initialise();
  }
}
</script> 
<script type="text/javascript">
  var Loader = function () {    
  var loaders = $('.loader-container'),
      meter = $('.meter'),
      k, i = 1,
      counter = function () {
        if (i <= 100) {
          meter.text(i.toString());
          i++;
        } else {
          window.clearInterval(k);
          // $('.FirmwareUpdating,.bg').hide();
        }
      };

  return {
    init: function (options) {
      options = options || {};
      var time = options.time ? options.time : 0,
          interval = time/100;
      
      loaders.addClass('run');
      k = window.setInterval(counter, interval); 
      setTimeout(function () {        
        loaders.addClass('done');
      }, time);
    },
  }
}();
Loader.init({
  time: 3000
});
</script>
</body>
</html>
